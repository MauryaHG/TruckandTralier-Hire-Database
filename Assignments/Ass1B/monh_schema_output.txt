SQL> 
SQL> -- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
SQL> --   at:        2022-09-15 13:13:23 AEST
SQL> --   site:      Oracle Database 12c
SQL> --   type:      Oracle Database 12c
SQL> 
SQL> 
SQL> 
SQL> DROP TABLE combo CASCADE CONSTRAINTS;

Error starting at line : 20 in command -
DROP TABLE combo CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist
00942. 00000 -  "table or view does not exist"
*Cause:    
*Action:
SQL> 
SQL> DROP TABLE combo_purpose CASCADE CONSTRAINTS;

Error starting at line : 22 in command -
DROP TABLE combo_purpose CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist
00942. 00000 -  "table or view does not exist"
*Cause:    
*Action:
SQL> 
SQL> DROP TABLE customer CASCADE CONSTRAINTS;

Error starting at line : 24 in command -
DROP TABLE customer CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist
00942. 00000 -  "table or view does not exist"
*Cause:    
*Action:
SQL> 
SQL> DROP TABLE employee CASCADE CONSTRAINTS;

Error starting at line : 26 in command -
DROP TABLE employee CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist
00942. 00000 -  "table or view does not exist"
*Cause:    
*Action:
SQL> 
SQL> DROP TABLE job CASCADE CONSTRAINTS;

Error starting at line : 28 in command -
DROP TABLE job CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist
00942. 00000 -  "table or view does not exist"
*Cause:    
*Action:
SQL> 
SQL> DROP TABLE make CASCADE CONSTRAINTS;

Error starting at line : 30 in command -
DROP TABLE make CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist
00942. 00000 -  "table or view does not exist"
*Cause:    
*Action:
SQL> 
SQL> DROP TABLE manufacturer CASCADE CONSTRAINTS;

Error starting at line : 32 in command -
DROP TABLE manufacturer CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist
00942. 00000 -  "table or view does not exist"
*Cause:    
*Action:
SQL> 
SQL> DROP TABLE purpose CASCADE CONSTRAINTS;

Error starting at line : 34 in command -
DROP TABLE purpose CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist
00942. 00000 -  "table or view does not exist"
*Cause:    
*Action:
SQL> 
SQL> DROP TABLE quote CASCADE CONSTRAINTS;

Error starting at line : 36 in command -
DROP TABLE quote CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist
00942. 00000 -  "table or view does not exist"
*Cause:    
*Action:
SQL> 
SQL> DROP TABLE trailer CASCADE CONSTRAINTS;

Error starting at line : 38 in command -
DROP TABLE trailer CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist
00942. 00000 -  "table or view does not exist"
*Cause:    
*Action:
SQL> 
SQL> DROP TABLE trailerclass CASCADE CONSTRAINTS;

Error starting at line : 40 in command -
DROP TABLE trailerclass CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist
00942. 00000 -  "table or view does not exist"
*Cause:    
*Action:
SQL> 
SQL> DROP TABLE trailermodel CASCADE CONSTRAINTS;

Error starting at line : 42 in command -
DROP TABLE trailermodel CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist
00942. 00000 -  "table or view does not exist"
*Cause:    
*Action:
SQL> 
SQL> DROP TABLE trailertype CASCADE CONSTRAINTS;

Error starting at line : 44 in command -
DROP TABLE trailertype CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist
00942. 00000 -  "table or view does not exist"
*Cause:    
*Action:
SQL> 
SQL> DROP TABLE truck CASCADE CONSTRAINTS;

Error starting at line : 46 in command -
DROP TABLE truck CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist
00942. 00000 -  "table or view does not exist"
*Cause:    
*Action:
SQL> 
SQL> DROP TABLE truckclass CASCADE CONSTRAINTS;

Error starting at line : 48 in command -
DROP TABLE truckclass CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist
00942. 00000 -  "table or view does not exist"
*Cause:    
*Action:
SQL> 
SQL> DROP TABLE truckmodel CASCADE CONSTRAINTS;

Error starting at line : 50 in command -
DROP TABLE truckmodel CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist
00942. 00000 -  "table or view does not exist"
*Cause:    
*Action:
SQL> 
SQL> DROP TABLE trucktype CASCADE CONSTRAINTS;

Error starting at line : 52 in command -
DROP TABLE trucktype CASCADE CONSTRAINTS
Error report -
ORA-00942: table or view does not exist
00942. 00000 -  "table or view does not exist"
*Cause:    
*Action:
SQL> 
SQL> -- predefined type, no DDL - MDSYS.SDO_GEOMETRY
SQL> 
SQL> -- predefined type, no DDL - XMLTYPE
SQL> 
SQL> CREATE TABLE combo (
  2      combo_code   CHAR(3) NOT NULL,
  3      truck_vin    CHAR(17) NOT NULL,
  4      trailer_code CHAR(5) NOT NULL
  5  );

Table COMBO created.

SQL> 
SQL> COMMENT ON COLUMN combo.combo_code IS
  2      'The unique identification code (prefixed with the letter "C") for the truck and trailer combo.'
  3  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN combo.truck_vin IS
  2      'The unique vehicle identification number (VIN) of the truck.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN combo.trailer_code IS
  2      'The unique five-character-code identifier for the trailer.';

Comment created.

SQL> 
SQL> ALTER TABLE combo ADD CONSTRAINT combo_pk PRIMARY KEY ( combo_code );

Table COMBO altered.

SQL> 
SQL> CREATE TABLE combo_purpose (
  2      combpurp_id NUMBER(4) NOT NULL,
  3      purpose_no  CHAR(3) NOT NULL,
  4      combo_code  CHAR(3) NOT NULL
  5  );

Table COMBO_PURPOSE created.

SQL> 
SQL> COMMENT ON COLUMN combo_purpose.combpurp_id IS
  2      'The unique identifier for the combo purpose (surrogate primary key).';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN combo_purpose.purpose_no IS
  2      'The unique identification number (prefixed with the letter "P") for the truck and trailer usage purpose.'
  3  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN combo_purpose.combo_code IS
  2      'The unique identification code (prefixed with the letter "C") for the truck and trailer combo.'
  3  ;

Comment created.

SQL> 
SQL> ALTER TABLE combo_purpose ADD CONSTRAINT combo_purpose_pk PRIMARY KEY ( combpurp_id )
  2  ;

Table COMBO_PURPOSE altered.

SQL> 
SQL> ALTER TABLE combo_purpose ADD CONSTRAINT combo_purpose_nk UNIQUE ( purpose_no,
  2                                                                     combo_code );

Table COMBO_PURPOSE altered.

SQL> 
SQL> CREATE TABLE customer (
  2      cust_no         NUMBER(7) NOT NULL,
  3      cust_famname    VARCHAR2(50) NOT NULL,
  4      cust_givname    VARCHAR2(50) NOT NULL,
  5      cust_busname    VARCHAR2(50),
  6      cust_address    VARCHAR2(100) NOT NULL,
  7      cust_contact_no CHAR(10) NOT NULL
  8  );

Table CUSTOMER created.

SQL> 
SQL> COMMENT ON COLUMN customer.cust_no IS
  2      'The unique identification number the customer.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN customer.cust_famname IS
  2      'The family name of the customer.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN customer.cust_givname IS
  2      'The given name of the customer.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN customer.cust_busname IS
  2      'The business name of the customer (if applicable).';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN customer.cust_address IS
  2      'The address of the customer.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN customer.cust_contact_no IS
  2      'The contact number of the customer.';

Comment created.

SQL> 
SQL> ALTER TABLE customer ADD CONSTRAINT customer_pk PRIMARY KEY ( cust_no );

Table CUSTOMER altered.

SQL> 
SQL> CREATE TABLE employee (
  2      emp_no                 NUMBER(4) NOT NULL,
  3      emp_role               CHAR(1) NOT NULL,
  4      emp_tfn                CHAR(9) NOT NULL,
  5      emp_famname            VARCHAR2(50) NOT NULL,
  6      emp_givname            VARCHAR2(50) NOT NULL,
  7      emp_contact_no         CHAR(10) NOT NULL,
  8      emp_salary             NUMBER(8, 2) NOT NULL,
  9      emp_licence_no         VARCHAR2(15),
 10      manager_emp_no         NUMBER(4),
 11      highest_trckclass_name VARCHAR2(10)
 12  );

Table EMPLOYEE created.

SQL> 
SQL> ALTER TABLE employee
  2      ADD CONSTRAINT chk_emprole CHECK ( emp_role IN ( 'C', 'D', 'G', 'M', 'N' ) );

Table EMPLOYEE altered.

SQL> 
SQL> COMMENT ON COLUMN employee.emp_no IS
  2      'The unique identification number of the employee.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN employee.emp_role IS
  2      'The role of the employee (C = Clerk, D = Driver, M = Mechanic, N = Manager, G = General).'
  3  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN employee.emp_tfn IS
  2      'The unique tax file number (TFN) of the employee.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN employee.emp_famname IS
  2      'The family name of the employee.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN employee.emp_givname IS
  2      'The given name of the employee.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN employee.emp_contact_no IS
  2      'The contact number of the employee.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN employee.emp_salary IS
  2      'The salary of the employee.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN employee.emp_licence_no IS
  2      'The licence number of the employee (if they are a driver).';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN employee.manager_emp_no IS
  2      'The unique identification number of the employee.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN employee.highest_trckclass_name IS
  2      'The name that is used to uniquely identify the truck class.';

Comment created.

SQL> 
SQL> ALTER TABLE employee ADD CONSTRAINT employee_pk PRIMARY KEY ( emp_no );

Table EMPLOYEE altered.

SQL> 
SQL> CREATE TABLE job (
  2      job_no                        NUMBER(4) NOT NULL,
  3      job_pickup_datetime           DATE NOT NULL,
  4      job_intended_dropoff_datetime DATE NOT NULL,
  5      job_actual_dropoff_datetime   DATE NOT NULL,
  6      job_cost                      NUMBER(6, 2),
  7      job_date_paid                 DATE NOT NULL,
  8      quote_no                      NUMBER(4) NOT NULL,
  9      clerk_no                      NUMBER(4) NOT NULL,
 10      combo_code                    CHAR(3) NOT NULL,
 11      driver_emp_no                 NUMBER(4) NOT NULL,
 12      mechanic_emp_no               NUMBER(4) NOT NULL
 13  );

Table JOB created.

SQL> 
SQL> COMMENT ON COLUMN job.job_no IS
  2      'The unique identifier number of the job.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN job.job_pickup_datetime IS
  2      'The actual pickup date and time for the job.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN job.job_intended_dropoff_datetime IS
  2      'The intended drop off date and time for the job.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN job.job_actual_dropoff_datetime IS
  2      'The actual drop off date and time for the job.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN job.job_cost IS
  2      'The cost of the job (if different to quote cost).';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN job.job_date_paid IS
  2      'The date on which the customer paid for the job.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN job.quote_no IS
  2      'The unique identification number of the quote.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN job.clerk_no IS
  2      'The unique identification number of the employee.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN job.combo_code IS
  2      'The unique identification code (prefixed with the letter "C") for the truck and trailer combo.'
  3  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN job.driver_emp_no IS
  2      'The unique identification number of the employee.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN job.mechanic_emp_no IS
  2      'The unique identification number of the employee.';

Comment created.

SQL> 
SQL> CREATE UNIQUE INDEX job__idx ON
  2      job (
  3          driver_emp_no
  4      ASC );

INDEX JOB__IDX created.

SQL> 
SQL> CREATE UNIQUE INDEX job__idxv1 ON
  2      job (
  3          mechanic_emp_no
  4      ASC );

INDEX JOB__IDXV1 created.

SQL> 
SQL> CREATE UNIQUE INDEX job__idxv2 ON
  2      job (
  3          quote_no
  4      ASC );

INDEX JOB__IDXV2 created.

SQL> 
SQL> ALTER TABLE job ADD CONSTRAINT job_pk PRIMARY KEY ( job_no );

Table JOB altered.

SQL> 
SQL> CREATE TABLE make (
  2      make_id   NUMBER(4) NOT NULL,
  3      make_name VARCHAR2(50) NOT NULL
  4  );

Table MAKE created.

SQL> 
SQL> COMMENT ON COLUMN make.make_id IS
  2      'The unique identifier of the truck make.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN make.make_name IS
  2      'The name of the truck make.';

Comment created.

SQL> 
SQL> ALTER TABLE make ADD CONSTRAINT make_pk PRIMARY KEY ( make_id );

Table MAKE altered.

SQL> 
SQL> CREATE TABLE manufacturer (
  2      manufacturer_id   NUMBER(4) NOT NULL,
  3      manufacturer_name VARCHAR2(50) NOT NULL
  4  );

Table MANUFACTURER created.

SQL> 
SQL> COMMENT ON COLUMN manufacturer.manufacturer_id IS
  2      'The unique identifier of the trailer manufacturer.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN manufacturer.manufacturer_name IS
  2      'The name of the trailer manufacturer.';

Comment created.

SQL> 
SQL> ALTER TABLE manufacturer ADD CONSTRAINT manufacturer_pk PRIMARY KEY ( manufacturer_id
  2  );

Table MANUFACTURER altered.

SQL> 
SQL> CREATE TABLE purpose (
  2      purpose_no   CHAR(3) NOT NULL,
  3      purpose_desc VARCHAR2(100) NOT NULL
  4  );

Table PURPOSE created.

SQL> 
SQL> COMMENT ON COLUMN purpose.purpose_no IS
  2      'The unique identification number (prefixed with the letter "P") for the truck and trailer usage purpose.'
  3  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN purpose.purpose_desc IS
  2      'The description of the truck and trailer usage purpose.';

Comment created.

SQL> 
SQL> ALTER TABLE purpose ADD CONSTRAINT purpose_pk PRIMARY KEY ( purpose_no );

Table PURPOSE altered.

SQL> 
SQL> CREATE TABLE quote (
  2      quote_no            NUMBER(4) NOT NULL,
  3      quote_start_date    DATE NOT NULL,
  4      quote_pickup_loc    VARCHAR2(100) NOT NULL,
  5      quote_dropoff_loc   VARCHAR2(100) NOT NULL,
  6      quote_prep_date     DATE NOT NULL,
  7      quote_cost          NUMBER(6, 2) NOT NULL,
  8      quote_days_required NUMBER(2) NOT NULL,
  9      quote_status        CHAR(1) NOT NULL,
 10      emp_no              NUMBER(4) NOT NULL,
 11      cust_no             NUMBER(7) NOT NULL,
 12      purpose_no          CHAR(3) NOT NULL
 13  );

Table QUOTE created.

SQL> 
SQL> ALTER TABLE quote
  2      ADD CONSTRAINT chk_quotestatus CHECK ( quote_status IN ( 'F', 'U' ) );

Table QUOTE altered.

SQL> 
SQL> COMMENT ON COLUMN quote.quote_no IS
  2      'The unique identification number of the quote.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN quote.quote_start_date IS
  2      'The preferred booking start date for the quote.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN quote.quote_pickup_loc IS
  2      'The pickup location of the quote.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN quote.quote_dropoff_loc IS
  2      'The drop off location of the quote.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN quote.quote_prep_date IS
  2      'The date on which the quote was prepared.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN quote.quote_cost IS
  2      'The cost of the quote. The cost is calculated by: (driver hire rate/day + truck class hire rate/day + trailer class hire rate/day) * days'
  3  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN quote.quote_days_required IS
  2      'The number of days required to fulfil the quote.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN quote.quote_status IS
  2      'The status of the quote. A quote can either be fulfilled (F) when the clerk assigns the quote to a job, or unfulfilled (U) when a quote is rejected by the customer or they do not call back with a decision.'
  3  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN quote.emp_no IS
  2      'The unique identification number of the employee.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN quote.cust_no IS
  2      'The unique identification number the customer.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN quote.purpose_no IS
  2      'The unique identification number (prefixed with the letter "P") for the truck and trailer usage purpose.'
  3  ;

Comment created.

SQL> 
SQL> ALTER TABLE quote ADD CONSTRAINT quote_pk PRIMARY KEY ( quote_no );

Table QUOTE altered.

SQL> 
SQL> CREATE TABLE trailer (
  2      trailer_code          CHAR(5) NOT NULL,
  3      trailer_purchase_cost NUMBER(8, 2) NOT NULL,
  4      trailer_purchase_date DATE NOT NULL,
  5      trailer_load_cap      NUMBER(5) NOT NULL,
  6      trailer_dimensions    CHAR(11) NOT NULL,
  7      trailclass_code       VARCHAR2(3) NOT NULL
  8  );

Table TRAILER created.

SQL> 
SQL> COMMENT ON COLUMN trailer.trailer_code IS
  2      'The unique five-character-code identifier for the trailer.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN trailer.trailer_purchase_cost IS
  2      'The dollar cost of purchase for the trailer.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN trailer.trailer_purchase_date IS
  2      'The date on which the trailer was purchased.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN trailer.trailer_load_cap IS
  2      'The load capacitiy (in kilograms) of the trailer.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN trailer.trailer_dimensions IS
  2      'The dimensions (LxW) (in metres) of the trailer.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN trailer.trailclass_code IS
  2      'The unique code of the trailer class.';

Comment created.

SQL> 
SQL> ALTER TABLE trailer ADD CONSTRAINT trailer_pk PRIMARY KEY ( trailer_code );

Table TRAILER altered.

SQL> 
SQL> CREATE TABLE trailerclass (
  2      trailclass_code            VARCHAR2(3) NOT NULL,
  3      trailclass_daily_hire_rate NUMBER(5, 2) NOT NULL
  4  );

Table TRAILERCLASS created.

SQL> 
SQL> COMMENT ON COLUMN trailerclass.trailclass_code IS
  2      'The unique code of the trailer class.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN trailerclass.trailclass_daily_hire_rate IS
  2      'The daily hire rate of a trailer that is determined by the trailer class.';

Comment created.

SQL> 
SQL> ALTER TABLE trailerclass ADD CONSTRAINT trailerclass_pk PRIMARY KEY ( trailclass_code
  2  );

Table TRAILERCLASS altered.

SQL> 
SQL> CREATE TABLE trailermodel (
  2      trailmodel_id   NUMBER(4) NOT NULL,
  3      trailmodel_name VARCHAR2(50) NOT NULL
  4  );

Table TRAILERMODEL created.

SQL> 
SQL> COMMENT ON COLUMN trailermodel.trailmodel_id IS
  2      'The unique identifier of the trailer model.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN trailermodel.trailmodel_name IS
  2      'The name of the trailer model.';

Comment created.

SQL> 
SQL> ALTER TABLE trailermodel ADD CONSTRAINT trailermodel_pk PRIMARY KEY ( trailmodel_id )
  2  ;

Table TRAILERMODEL altered.

SQL> 
SQL> CREATE TABLE trailertype (
  2      trailtype_id    NUMBER(4) NOT NULL,
  3      manufacturer_id NUMBER(4) NOT NULL,
  4      trailmodel_id   NUMBER(4) NOT NULL,
  5      trailclass_code VARCHAR2(3) NOT NULL
  6  );

Table TRAILERTYPE created.

SQL> 
SQL> COMMENT ON COLUMN trailertype.trailtype_id IS
  2      'The unique identifier of the trailer type (surrogate primary key).';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN trailertype.manufacturer_id IS
  2      'The unique identifier of the trailer manufacturer.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN trailertype.trailmodel_id IS
  2      'The unique identifier of the trailer model.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN trailertype.trailclass_code IS
  2      'The unique code of the trailer class.';

Comment created.

SQL> 
SQL> ALTER TABLE trailertype ADD CONSTRAINT trailertype_pk PRIMARY KEY ( trailtype_id );

Table TRAILERTYPE altered.

SQL> 
SQL> ALTER TABLE trailertype ADD CONSTRAINT trailertype_nk UNIQUE ( manufacturer_id,
  2                                                                 trailmodel_id );

Table TRAILERTYPE altered.

SQL> 
SQL> CREATE TABLE truck (
  2      truck_vin              CHAR(17) NOT NULL,
  3      truck_reg_no           CHAR(9) NOT NULL,
  4      truck_km_travelled     NUMBER(6) NOT NULL,
  5      truck_km_last_serviced NUMBER(6) NOT NULL,
  6      truck_purchase_cost    NUMBER(8, 2) NOT NULL,
  7      truck_purchase_date    DATE NOT NULL,
  8      trckclass_name         VARCHAR2(10) NOT NULL
  9  );

Table TRUCK created.

SQL> 
SQL> COMMENT ON COLUMN truck.truck_vin IS
  2      'The unique vehicle identification number (VIN) of the truck.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN truck.truck_reg_no IS
  2      'The registration number of the truck.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN truck.truck_km_travelled IS
  2      'The number of kilometres travelled by the truck.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN truck.truck_km_last_serviced IS
  2      'The kilometre reading of the last service for the truck.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN truck.truck_purchase_cost IS
  2      'The dollar cost of purchase for the truck.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN truck.truck_purchase_date IS
  2      'The date on which the truck was purchased.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN truck.trckclass_name IS
  2      'The name that is used to uniquely identify the truck class.';

Comment created.

SQL> 
SQL> ALTER TABLE truck ADD CONSTRAINT truck_pk PRIMARY KEY ( truck_vin );

Table TRUCK altered.

SQL> 
SQL> CREATE TABLE truckclass (
  2      trckclass_name            VARCHAR2(10) NOT NULL,
  3      trkclass_daily_hire_rate  NUMBER(5, 2) NOT NULL,
  4      trkclass_driver_hire_rate NUMBER(5, 2) NOT NULL
  5  );

Table TRUCKCLASS created.

SQL> 
SQL> COMMENT ON COLUMN truckclass.trckclass_name IS
  2      'The name that is used to uniquely identify the truck class.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN truckclass.trkclass_daily_hire_rate IS
  2      'The daily hire rate of a truck that is determined by the truck class.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN truckclass.trkclass_driver_hire_rate IS
  2      'The driver hire rate of a truck that is determined by the truck class.';

Comment created.

SQL> 
SQL> ALTER TABLE truckclass ADD CONSTRAINT truckclass_pk PRIMARY KEY ( trckclass_name );

Table TRUCKCLASS altered.

SQL> 
SQL> CREATE TABLE truckmodel (
  2      trckmodel_id   NUMBER(4) NOT NULL,
  3      trckmodel_name VARCHAR2(50) NOT NULL
  4  );

Table TRUCKMODEL created.

SQL> 
SQL> COMMENT ON COLUMN truckmodel.trckmodel_id IS
  2      'The unique identifier of a truck model.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN truckmodel.trckmodel_name IS
  2      'The name of the truck model.';

Comment created.

SQL> 
SQL> ALTER TABLE truckmodel ADD CONSTRAINT truck_model_pk PRIMARY KEY ( trckmodel_id );

Table TRUCKMODEL altered.

SQL> 
SQL> CREATE TABLE trucktype (
  2      trcktype_id    NUMBER(4) NOT NULL,
  3      make_id        NUMBER(4) NOT NULL,
  4      trckmodel_id   NUMBER(4) NOT NULL,
  5      trckclass_name VARCHAR2(10) NOT NULL
  6  );

Table TRUCKTYPE created.

SQL> 
SQL> COMMENT ON COLUMN trucktype.trcktype_id IS
  2      'The unique identifier of the truck type (surrogate primary key).';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN trucktype.make_id IS
  2      'The unique identifier of the truck make.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN trucktype.trckmodel_id IS
  2      'The unique identifier of a truck model.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN trucktype.trckclass_name IS
  2      'The name that is used to uniquely identify the truck class.';

Comment created.

SQL> 
SQL> ALTER TABLE trucktype ADD CONSTRAINT trucktype_pk PRIMARY KEY ( trcktype_id );

Table TRUCKTYPE altered.

SQL> 
SQL> ALTER TABLE trucktype ADD CONSTRAINT trucktype_nk UNIQUE ( make_id,
  2                                                             trckmodel_id );

Table TRUCKTYPE altered.

SQL> 
SQL> ALTER TABLE job
  2      ADD CONSTRAINT clerk_job FOREIGN KEY ( clerk_no )
  3          REFERENCES employee ( emp_no );

Table JOB altered.

SQL> 
SQL> ALTER TABLE combo_purpose
  2      ADD CONSTRAINT combo_combo_purpose FOREIGN KEY ( combo_code )
  3          REFERENCES combo ( combo_code );

Table COMBO_PURPOSE altered.

SQL> 
SQL> ALTER TABLE job
  2      ADD CONSTRAINT combo_job FOREIGN KEY ( combo_code )
  3          REFERENCES combo ( combo_code );

Table JOB altered.

SQL> 
SQL> ALTER TABLE quote
  2      ADD CONSTRAINT customer_quote FOREIGN KEY ( cust_no )
  3          REFERENCES customer ( cust_no );

Table QUOTE altered.

SQL> 
SQL> ALTER TABLE job
  2      ADD CONSTRAINT driver_job FOREIGN KEY ( driver_emp_no )
  3          REFERENCES employee ( emp_no );

Table JOB altered.

SQL> 
SQL> ALTER TABLE employee
  2      ADD CONSTRAINT employee_employee FOREIGN KEY ( manager_emp_no )
  3          REFERENCES employee ( emp_no );

Table EMPLOYEE altered.

SQL> 
SQL> ALTER TABLE quote
  2      ADD CONSTRAINT employee_quote FOREIGN KEY ( emp_no )
  3          REFERENCES employee ( emp_no );

Table QUOTE altered.

SQL> 
SQL> ALTER TABLE trucktype
  2      ADD CONSTRAINT make_trucktype FOREIGN KEY ( make_id )
  3          REFERENCES make ( make_id );

Table TRUCKTYPE altered.

SQL> 
SQL> ALTER TABLE trailertype
  2      ADD CONSTRAINT manufacturer_trailertype FOREIGN KEY ( manufacturer_id )
  3          REFERENCES manufacturer ( manufacturer_id );

Table TRAILERTYPE altered.

SQL> 
SQL> ALTER TABLE job
  2      ADD CONSTRAINT mechanic_job FOREIGN KEY ( mechanic_emp_no )
  3          REFERENCES employee ( emp_no );

Table JOB altered.

SQL> 
SQL> ALTER TABLE combo_purpose
  2      ADD CONSTRAINT purpose_combo_purpose FOREIGN KEY ( purpose_no )
  3          REFERENCES purpose ( purpose_no );

Table COMBO_PURPOSE altered.

SQL> 
SQL> ALTER TABLE quote
  2      ADD CONSTRAINT purpose_quote FOREIGN KEY ( purpose_no )
  3          REFERENCES purpose ( purpose_no );

Table QUOTE altered.

SQL> 
SQL> ALTER TABLE job
  2      ADD CONSTRAINT quote_job FOREIGN KEY ( quote_no )
  3          REFERENCES quote ( quote_no );

Table JOB altered.

SQL> 
SQL> ALTER TABLE combo
  2      ADD CONSTRAINT trailer_combo FOREIGN KEY ( trailer_code )
  3          REFERENCES trailer ( trailer_code );

Table COMBO altered.

SQL> 
SQL> ALTER TABLE trailer
  2      ADD CONSTRAINT trailerclass_trailer FOREIGN KEY ( trailclass_code )
  3          REFERENCES trailerclass ( trailclass_code );

Table TRAILER altered.

SQL> 
SQL> ALTER TABLE trailertype
  2      ADD CONSTRAINT trailerclass_trailertype FOREIGN KEY ( trailclass_code )
  3          REFERENCES trailerclass ( trailclass_code );

Table TRAILERTYPE altered.

SQL> 
SQL> ALTER TABLE trailertype
  2      ADD CONSTRAINT trailermodel_trailertype FOREIGN KEY ( trailmodel_id )
  3          REFERENCES trailermodel ( trailmodel_id );

Table TRAILERTYPE altered.

SQL> 
SQL> ALTER TABLE combo
  2      ADD CONSTRAINT truck_combo FOREIGN KEY ( truck_vin )
  3          REFERENCES truck ( truck_vin );

Table COMBO altered.

SQL> 
SQL> ALTER TABLE employee
  2      ADD CONSTRAINT truckclass_employee FOREIGN KEY ( highest_trckclass_name )
  3          REFERENCES truckclass ( trckclass_name );

Table EMPLOYEE altered.

SQL> 
SQL> ALTER TABLE truck
  2      ADD CONSTRAINT truckclass_truck FOREIGN KEY ( trckclass_name )
  3          REFERENCES truckclass ( trckclass_name );

Table TRUCK altered.

SQL> 
SQL> ALTER TABLE trucktype
  2      ADD CONSTRAINT truckclass_trucktype FOREIGN KEY ( trckclass_name )
  3          REFERENCES truckclass ( trckclass_name );

Table TRUCKTYPE altered.

SQL> 
SQL> ALTER TABLE trucktype
  2      ADD CONSTRAINT truckmodel_trucktype FOREIGN KEY ( trckmodel_id )
  3          REFERENCES truckmodel ( trckmodel_id );

Table TRUCKTYPE altered.

SQL> 
SQL> 
SQL> 
SQL> -- Oracle SQL Developer Data Modeler Summary Report: 
SQL> -- 
SQL> -- CREATE TABLE                            17
SQL> -- CREATE INDEX                             3
SQL> -- ALTER TABLE                             44
SQL> -- CREATE VIEW                              0
SQL> -- ALTER VIEW                               0
SQL> -- CREATE PACKAGE                           0
SQL> -- CREATE PACKAGE BODY                      0
SQL> -- CREATE PROCEDURE                         0
SQL> -- CREATE FUNCTION                          0
SQL> -- CREATE TRIGGER                           0
SQL> -- ALTER TRIGGER                            0
SQL> -- CREATE COLLECTION TYPE                   0
SQL> -- CREATE STRUCTURED TYPE                   0
SQL> -- CREATE STRUCTURED TYPE BODY              0
SQL> -- CREATE CLUSTER                           0
SQL> -- CREATE CONTEXT                           0
SQL> -- CREATE DATABASE                          0
SQL> -- CREATE DIMENSION                         0
SQL> -- CREATE DIRECTORY                         0
SQL> -- CREATE DISK GROUP                        0
SQL> -- CREATE ROLE                              0
SQL> -- CREATE ROLLBACK SEGMENT                  0
SQL> -- CREATE SEQUENCE                          0
SQL> -- CREATE MATERIALIZED VIEW                 0
SQL> -- CREATE MATERIALIZED VIEW LOG             0
SQL> -- CREATE SYNONYM                           0
SQL> -- CREATE TABLESPACE                        0
SQL> -- CREATE USER                              0
SQL> -- 
SQL> -- DROP TABLESPACE                          0
SQL> -- DROP DATABASE                            0
SQL> -- 
SQL> -- REDACTION POLICY                         0
SQL> -- TSDP POLICY                              0
SQL> -- 
SQL> -- ORDS DROP SCHEMA                         0
SQL> -- ORDS ENABLE SCHEMA                       0
SQL> -- ORDS ENABLE OBJECT                       0
SQL> -- 
SQL> -- ERRORS                                   0
SQL> -- WARNINGS                                 0
SQL> 
SQL> SPOOL OFF
